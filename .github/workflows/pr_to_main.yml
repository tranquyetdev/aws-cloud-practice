name: PR to Main
on:
  pull_request:
    branches:
      - main
jobs:
  setup:
    name: Setup CI/CD
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout#checkout-pull-request-head-commit-instead-of-merge-commit
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0

      # Install project dependencies
      - name: Install Dependencies
        uses: ./.github/actions/install_deps

      # Print out affected projects and set the output for other jobs to use
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - name: Get NX Affected projects
        id: nx-affected
        run: |
          nx_affected=$(npx nx show projects --with-target test --affected --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }})
          echo "nx_affected=$nx_affected" >> $GITHUB_OUTPUT
      - run: echo "nx_affected=${{ steps.nx-affected.outputs.nx_affected }}"
  ci_tests:
    name: CI Tests
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        action: ['lint', 'format:check', 'test']
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3

      - name: Install Dependencies
        uses: ./.github/actions/install_deps

      - name: Tests - ${{ matrix.action }}
        run: |
          if [ ${{ matrix.action }} -eq 'test' ]
          then
            npx nx affected -t ${{ matrix.action }} --parallel=3 --ci --coverage
          else
            npx nx affected -t ${{ matrix.action }} --parallel=3 --ci
          fi

      - name: Upload coverage reports to Codecov
        if: matrix.action == 'test'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage-final.json
          directory: ./coverage/apps/simple-react-app
          name: codecov-umbrella
          verbose: true
  after:
    name: After CI/CD
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - setup
      - ci_tests
    steps:
      - name: Check pipeline status
        run: |
          echo "setup = ${{ needs.setup.result }}"
          echo "test_agents = ${{ needs.ci_tests.result }}"
          if [ "${{ needs.setup.result }}" == "success" ] && \
              [ "${{ needs.ci_tests.result }}" == "success" ]
          then
            echo "Pipeline passed! hooray!!"
          else
            echo "Pipeline failed, check the logs on other steps please."
            exit 1
          fi
